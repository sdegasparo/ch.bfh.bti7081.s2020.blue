<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ch.bfh.bti7081.s2020.blue</groupId>
  <artifactId>socialanxiety</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>socialanxiety</name>
  <description>A project for BTI-7081 at BFH in semester 2020/1.</description>

  <licenses>
    <license>
      <name>Apache 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <contributors>
    <contributor>
      <name>Timon Borter</name>
      <url>https://github.com/bbortt</url>
    </contributor>
    <contributor>
      <name>Sven De Gasparo</name>
      <url>https://github.com/zeroplexer</url>
    </contributor>
    <contributor>
      <name>Luca MÃ¼hlheim</name>
      <url>https://github.com/Lucamuh</url>
    </contributor>
    <contributor>
      <name>Marc Muster</name>
      <url>https://github.com/Marcarrian</url>
    </contributor>
    <contributor>
      <name>Elias Schmidhalter</name>
      <url>https://github.com/calesanz</url>
    </contributor>
  </contributors>

  <properties>
    <!-- Maven project configuration -->
    <java.version>11</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Vaadin configuration -->
    <vaadin.version>14.1.27</vaadin.version>

    <!-- Sonarcloud configuration -->
    <sonar.projectKey>zeroplexer_ch.bfh.bti7081.s2020.blue</sonar.projectKey>

    <!-- Dependency management -->
    <lombok.version>1.18.12</lombok.version>
    <jupiter.version>5.6.2</jupiter.version>
    <mockito-core.version>3.3.3</mockito-core.version>
    <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>

    <!-- Flyway configuration -->
    <flyway.db.url>jdbc:postgresql://localhost:${flyway.db.port}</flyway.db.url>
    <flyway.db.port>5432</flyway.db.port>
    <flyway.db.user>social_anxiety</flyway.db.user>
    <flyway.db.password>social_anxiety_password</flyway.db.password>
    <flyway.db.schema>social_anxiety</flyway.db.schema>
  </properties>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.0.RELEASE</version>
  </parent>

  <repositories>
    <!-- The order of definitions matters. Explicitly defining central here to make sure it has the highest priority. -->

    <!-- Main Maven repository -->
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <!-- Repository used by many Vaadin add-ons -->
    <repository>
      <id>Vaadin Directory</id>
      <url>https://maven.vaadin.com/vaadin-addons</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <!-- Main Maven repository -->
    <pluginRepository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-bom</artifactId>
        <version>${vaadin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.vaadin</groupId>
      <!-- Replace artifactId with vaadin-core to use only free components -->
      <artifactId>vaadin</artifactId>
      <exclusions>
        <!-- Webjars are only needed when running in Vaadin 13 compatibility mode -->
        <exclusion>
          <groupId>com.vaadin.webjar</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.insites</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.polymer</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.polymerelements</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.vaadin</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.webcomponents</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-spring-boot-starter</artifactId>
      <exclusions>
        <!-- Excluding so that webjars are not included. -->
        <exclusion>
          <groupId>com.vaadin</groupId>
          <artifactId>vaadin-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-undertow</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-data</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-testbench</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito-core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${jupiter.version}</version>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>spring-boot:run</defaultGoal>

    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <!-- Clean build and startup time for Vaadin apps sometimes may exceed
             the default Spring Boot's 30sec timeout.  -->
        <configuration>
          <wait>500</wait>
          <maxAttempts>240</maxAttempts>
        </configuration>
      </plugin>

      <!--
          Take care of synchronizing java dependencies and imports in
          package.json and main.js files.
          It also creates webpack.config.js if not exists yet.
      -->
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>${vaadin.version}</version>

        <executions>
          <execution>
            <goals>
              <goal>prepare-frontend</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <frontendDirectory>${project.basedir}/src/main/webapp</frontendDirectory>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>

        <configuration>
          <user>${flyway.db.user}</user>
          <password>${flyway.db.password}</password>
          <url>${flyway.db.url}</url>
          <schemas>
            <schema>${flyway.db.schema}</schema>
          </schemas>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>

        <executions>
          <execution>
            <id>default-test</id>

            <phase>test</phase>

            <goals>
              <goal>test</goal>
            </goals>

            <configuration>
              <includes>
                <include>**/*UnitTest.java</include>
              </includes>

              <excludes>
                <exclude>**/*IntegrationTest.java</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>

        <executions>
          <execution>
            <id>integration-tests</id>

            <phase>integration-test</phase>

            <goals>
              <goal>integration-test</goal>
            </goals>

            <configuration>
              <includes>
                <include>**/*IntegrationTest.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>

        <executions>
          <execution>
            <id>prepare-agent</id>

            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>

          <execution>
            <id>report</id>

            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- Production mode is activated using -Pproduction -->
      <id>production</id>

      <properties>
        <vaadin.productionMode>true</vaadin.productionMode>
      </properties>

      <dependencies>
        <dependency>
          <groupId>com.vaadin</groupId>
          <artifactId>flow-server-production-mode</artifactId>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>

            <configuration>
              <jvmArguments>-Dvaadin.productionMode</jvmArguments>
            </configuration>
          </plugin>

          <plugin>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-maven-plugin</artifactId>
            <version>${vaadin.version}</version>

            <executions>
              <execution>
                <phase>compile</phase>

                <goals>
                  <goal>build-frontend</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
